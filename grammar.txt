<program> -> <block>
<block> -> <declarations> <statements>
<declarations> -> <declaration> <declarations>
<declarations> -> ε
<declaration> -> <type> <ident> SEMICOLON
<type> -> INT
<type> -> REAL
<statements> -> ε
<statements> -> <statement> <statements>
<statement> -> <assignment>
<statement> -> <if-statement>
<statement> -> <while-statement>
<statement> -> <print-statement>
<assignment> -> <ident> ASSIGN <expr> SEMICOLON
<if-statement> -> IF <expr> THEN <block> END
<if-statement> -> IF <expr> THEN <block> ELSE <block> END
<while-statement> -> WHILE <expr> LOOP <block> END
<print-statement> -> PRINT <expr> SEMICOLON
<expr> -> <simple-expr>
<expr> -> <expr> <relation> <simple-expr>
<relation> -> EQ
<relation> -> NOT_EQ
<relation> -> GREATER_EQ
<relation> -> LESS_EQ
<relation> -> GREATER
<relation> -> LESS
<simple-expr> -> <term>
<simple-expr> -> <simple-expr> <plus-operator> <term>
<plus-operator> -> PLUS
<plus-operator> -> MINUS
<plus-operator> -> OR
<term> -> <factor>
<term> -> <term> <mult-operator> <factor>
<mult-operator> -> MULTIPLICATION
<mult-operator> -> DIVIDE
<mult-operator> -> AND
<mult-operator> -> DIV
<mult-operator> -> MOD
<ident> -> <comp-id>
<ident> -> IDENTIFIER
<ident> -> <call-function>
<comp-id> -> IDENTIFIER
<comp-id> -> IDENTIFIER DOT <comp-id>
<call-function> -> <comp-id> LEFT_PAREN <list-simple-expr> RIGHT_PAREN
<list-simple-expr> -> <simple-expr>
<list-simple-expr> -> <simple-expr> <list-simple-expr>
<factor> -> <ident>
<factor> -> NOT <factor>
<factor> -> MINUS <factor>
<factor> -> <bool-value>
<factor> -> <numeric-value>
<factor> -> LEFT_PAREN <expr> RIGHT_PAREN
<bool-value> -> TRUE
<bool-value> -> FALSE
<numeric-value> -> INTEGER
<numeric-value> -> FLOAT
