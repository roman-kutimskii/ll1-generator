<axiom> -> <program> # | # IDENTIFIER IF INT PRINT REAL WHILE
<program> -> <block> | # IDENTIFIER IF INT PRINT REAL WHILE
<block> -> <declarations> <statements> | # ELSE END IDENTIFIER IF INT PRINT REAL WHILE
<declarations> -> <declaration> <declarations> | INT REAL
<declarations> -> ε | # ELSE END IDENTIFIER IF PRINT WHILE
<declaration> -> <type> <ident> SEMICOLON | INT REAL
<type> -> INT | INT
<type> -> REAL | REAL
<statements> -> <statement> <statements> | IDENTIFIER IF PRINT WHILE
<statements> -> ε | # ELSE END
<statement> -> <ident> ASSIGN <expr> SEMICOLON | IDENTIFIER
<statement> -> <if-statement> | IF
<statement> -> WHILE <expr> LOOP <block> END | WHILE
<statement> -> PRINT <expr> SEMICOLON | PRINT
<if-statement'> -> END | END
<if-statement'> -> ELSE <block> END | ELSE
<if-statement> -> IF <expr> THEN <block> <if-statement'> | IF
<exprr> -> <relation> <simple-expr> <exprr> | EQ GREATER GREATER_EQ LESS LESS_EQ NOT_EQ
<exprr> -> ε | LOOP RIGHT_PAREN SEMICOLON THEN
<expr> -> <simple-expr> <exprr> | FALSE FLOAT IDENTIFIER INTEGER LEFT_PAREN MINUS NOT TRUE
<relation> -> EQ | EQ
<relation> -> NOT_EQ | NOT_EQ
<relation> -> GREATER_EQ | GREATER_EQ
<relation> -> LESS_EQ | LESS_EQ
<relation> -> GREATER | GREATER
<relation> -> LESS | LESS
<simple-exprr> -> <plus-operator> <term> <simple-exprr> | MINUS OR PLUS
<simple-exprr> -> ε | EQ GREATER GREATER_EQ LESS LESS_EQ LOOP NOT_EQ RIGHT_PAREN SEMICOLON THEN
<simple-expr> -> <term> <simple-exprr> | FALSE FLOAT IDENTIFIER INTEGER LEFT_PAREN MINUS NOT TRUE
<plus-operator> -> PLUS | PLUS
<plus-operator> -> MINUS | MINUS
<plus-operator> -> OR | OR
<termr> -> <mult-operator> <factor> <termr> | AND DIV DIVIDE MOD MULTIPLICATION
<termr> -> ε | EQ GREATER GREATER_EQ LESS LESS_EQ LOOP MINUS NOT_EQ OR PLUS RIGHT_PAREN SEMICOLON THEN
<term> -> <factor> <termr> | FALSE FLOAT IDENTIFIER INTEGER LEFT_PAREN MINUS NOT TRUE
<mult-operator> -> MULTIPLICATION | MULTIPLICATION
<mult-operator> -> DIVIDE | DIVIDE
<mult-operator> -> AND | AND
<mult-operator> -> DIV | DIV
<mult-operator> -> MOD | MOD
<ident'> -> ε | AND ASSIGN DIV DIVIDE EQ GREATER GREATER_EQ LESS LESS_EQ LOOP MINUS MOD MULTIPLICATION NOT_EQ OR PLUS RIGHT_PAREN SEMICOLON THEN
<ident'> -> DOT <ident> | DOT
<ident> -> IDENTIFIER <ident'> | IDENTIFIER
<factor> -> <ident> | IDENTIFIER
<factor> -> NOT <factor> | NOT
<factor> -> MINUS <factor> | MINUS
<factor> -> <bool-value> | FALSE TRUE
<factor> -> <numeric-value> | FLOAT INTEGER
<factor> -> LEFT_PAREN <expr> RIGHT_PAREN | LEFT_PAREN
<bool-value> -> TRUE | TRUE
<bool-value> -> FALSE | FALSE
<numeric-value> -> INTEGER | INTEGER
<numeric-value> -> FLOAT | FLOAT
