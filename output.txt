PROGRAM (1, 1) "PROGRAM"
IDENTIFIER (1, 9) "BubbleSort"
SEMICOLON (1, 19) ";"
VAR (2, 1) "VAR"
IDENTIFIER (3, 5) "arr"
COLON (3, 8) ":"
ARRAY (3, 10) "ARRAY"
LEFT_BRACKET (3, 15) "["
INTEGER (3, 16) "10"
RIGHT_BRACKET (3, 18) "]"
OF (3, 20) "OF"
INT (3, 23) "INT"
SEMICOLON (3, 26) ";"
IDENTIFIER (4, 5) "i"
COMMA (4, 6) ","
IDENTIFIER (4, 8) "j"
COMMA (4, 9) ","
IDENTIFIER (4, 11) "temp"
COLON (4, 15) ":"
INT (4, 17) "INT"
SEMICOLON (4, 20) ";"
IDENTIFIER (5, 5) "ch"
COLON (5, 7) ":"
CHAR (5, 9) "CHAR"
SEMICOLON (5, 13) ";"
IDENTIFIER (6, 5) "d"
COLON (6, 6) ":"
REAL (6, 8) "REAL"
SEMICOLON (6, 12) ";"
BEGIN (7, 1) "BEGIN"
IDENTIFIER (8, 3) "var1"
ASSIGN (8, 8) ":="
FLOAT (8, 11) "2.3"
SEMICOLON (8, 14) ";"
SEMICOLON (9, 3) ";"
IF (10, 3) "IF"
IDENTIFIER (10, 6) "d"
THEN (10, 8) "THEN"
READ (11, 5) "READ"
IDENTIFIER (11, 10) "ch"
SEMICOLON (11, 12) ";"
END (12, 3) "END"
IF (14, 3) "IF"
IDENTIFIER (14, 6) "d"
EQ (14, 8) "=="
IDENTIFIER (14, 11) "d"
THEN (14, 13) "THEN"
BEGIN (15, 7) "BEGIN"
READ (16, 9) "READ"
IDENTIFIER (16, 14) "ch"
SEMICOLON (16, 16) ";"
SEMICOLON (17, 9) ";"
END (18, 7) "END"
END (19, 3) "END"
IF (21, 3) "IF"
IDENTIFIER (21, 6) "d"
EQ (21, 8) "=="
IDENTIFIER (21, 11) "d"
THEN (21, 13) "THEN"
READ (22, 5) "READ"
IDENTIFIER (22, 10) "ch"
SEMICOLON (22, 12) ";"
ELSE (23, 3) "ELSE"
PRINT (24, 5) "PRINT"
IDENTIFIER (24, 11) "ch"
SEMICOLON (24, 13) ";"
END (25, 3) "END"
IF (27, 3) "IF"
IDENTIFIER (27, 6) "d"
EQ (27, 8) "=="
IDENTIFIER (27, 11) "d"
THEN (27, 13) "THEN"
BEGIN (28, 7) "BEGIN"
READ (29, 9) "READ"
IDENTIFIER (29, 14) "ch"
SEMICOLON (29, 16) ";"
END (30, 7) "END"
ELSE (31, 3) "ELSE"
BEGIN (32, 7) "BEGIN"
PRINT (33, 9) "PRINT"
IDENTIFIER (33, 15) "ch"
SEMICOLON (33, 17) ";"
SEMICOLON (34, 9) ";"
END (35, 7) "END"
END (36, 3) "END"
IDENTIFIER (38, 3) "arr"
LEFT_BRACKET (38, 6) "["
INTEGER (38, 7) "0"
RIGHT_BRACKET (38, 8) "]"
ASSIGN (38, 10) ":="
INTEGER (38, 13) "5"
SEMICOLON (38, 14) ";"
IDENTIFIER (39, 3) "arr"
LEFT_BRACKET (39, 6) "["
INTEGER (39, 7) "1"
RIGHT_BRACKET (39, 8) "]"
ASSIGN (39, 10) ":="
INTEGER (39, 13) "2"
SEMICOLON (39, 14) ";"
IDENTIFIER (41, 3) "i"
ASSIGN (41, 5) ":="
INTEGER (41, 8) "0"
SEMICOLON (41, 9) ";"
WHILE (42, 3) "WHILE"
IDENTIFIER (42, 9) "i"
BEGIN (43, 3) "BEGIN"
IDENTIFIER (44, 5) "j"
ASSIGN (44, 7) ":="
INTEGER (44, 10) "0"
SEMICOLON (44, 11) ";"
WHILE (45, 9) "WHILE"
IDENTIFIER (45, 15) "j"
LESS (45, 17) "<"
INTEGER (45, 19) "9"
MINUS (45, 21) "-"
IDENTIFIER (45, 23) "i"
BEGIN (46, 9) "BEGIN"
IF (47, 13) "IF"
IDENTIFIER (47, 16) "arr"
LEFT_BRACKET (47, 19) "["
IDENTIFIER (47, 20) "j"
RIGHT_BRACKET (47, 21) "]"
GREATER (47, 23) ">"
IDENTIFIER (47, 25) "arr"
LEFT_BRACKET (47, 28) "["
IDENTIFIER (47, 29) "j"
PLUS (47, 30) "+"
INTEGER (47, 31) "1"
RIGHT_BRACKET (47, 32) "]"
THEN (47, 34) "THEN"
BEGIN (48, 17) "BEGIN"
IDENTIFIER (49, 21) "temp"
ASSIGN (49, 26) ":="
IDENTIFIER (49, 29) "arr"
LEFT_BRACKET (49, 32) "["
IDENTIFIER (49, 33) "j"
RIGHT_BRACKET (49, 34) "]"
SEMICOLON (49, 35) ";"
IDENTIFIER (50, 21) "arr"
LEFT_BRACKET (50, 24) "["
IDENTIFIER (50, 25) "j"
RIGHT_BRACKET (50, 26) "]"
ASSIGN (50, 28) ":="
IDENTIFIER (50, 31) "arr"
LEFT_BRACKET (50, 34) "["
IDENTIFIER (50, 35) "j"
PLUS (50, 36) "+"
INTEGER (50, 37) "1"
RIGHT_BRACKET (50, 38) "]"
SEMICOLON (50, 39) ";"
IDENTIFIER (51, 21) "arr"
LEFT_BRACKET (51, 24) "["
IDENTIFIER (51, 25) "j"
PLUS (51, 26) "+"
INTEGER (51, 27) "1"
RIGHT_BRACKET (51, 28) "]"
ASSIGN (51, 30) ":="
IDENTIFIER (51, 33) "temp"
SEMICOLON (51, 37) ";"
SEMICOLON (52, 21) ";"
END (53, 17) "END"
END (54, 13) "END"
SEMICOLON (55, 13) ";"
END (56, 9) "END"
IDENTIFIER (57, 5) "i"
ASSIGN (57, 7) ":="
IDENTIFIER (57, 10) "i"
PLUS (57, 12) "+"
INTEGER (57, 14) "1"
SEMICOLON (57, 15) ";"
END (58, 3) "END"
PRINT (60, 3) "PRINT"
STRING (60, 9) "'Sorted array:'"
SEMICOLON (60, 24) ";"
IDENTIFIER (61, 3) "i"
ASSIGN (61, 5) ":="
INTEGER (61, 8) "0"
SEMICOLON (61, 9) ";"
WHILE (62, 3) "WHILE"
IDENTIFIER (62, 9) "i"
LESS (62, 11) "<"
INTEGER (62, 13) "10"
BEGIN (63, 3) "BEGIN"
PRINT (64, 5) "PRINT"
IDENTIFIER (64, 11) "arr"
LEFT_BRACKET (64, 14) "["
IDENTIFIER (64, 15) "i"
RIGHT_BRACKET (64, 16) "]"
SEMICOLON (64, 17) ";"
IDENTIFIER (65, 5) "i"
ASSIGN (65, 7) ":="
IDENTIFIER (65, 10) "i"
PLUS (65, 12) "+"
INTEGER (65, 14) "1"
SEMICOLON (65, 15) ";"
END (66, 3) "END"
END (67, 1) "END"
DOT (67, 4) "."
# (68, 1) "#"
